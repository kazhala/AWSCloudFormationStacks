AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Creates a ubuntu EC2 instance as development envrionment for Kevin with automation to auto stop/start the instance.

Parameters:
  EC2KeyPair:
    Type: AWS::EC2::KeyPair::KeyName
  EC2AMI:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/canonical/ubuntu/server/20.04/stable/current/amd64/hvm/ebs-gp2/ami-id
  InstanceType:
    Type: String
    AllowedValues:
      - t3.large
      - t3.xlarge
    Default: t3.xlarge
  OfficeIPCIDR:
    Type: String
  HomeIPCIDR:
    Type: String
  EC2VolumeSize:
    Type: String
    Default: 50
  InstancePassword:
    Type: String
    NoEcho: true

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SecurityGroup for Kevin development instance.
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: !Ref OfficeIPCIDR
          FromPort: 22
          ToPort: 22

  SecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      CidrIp: !Ref HomeIPCIDR
      FromPort: 22
      ToPort: 22
      GroupId: !GetAtt SecurityGroup.GroupId

  UbuntuEC2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref EC2AMI
      InstanceType: !Ref InstanceType
      KeyName: !Ref EC2KeyPair
      SecurityGroupIds:
        - !GetAtt SecurityGroup.GroupId
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            DeleteOnTermination: true
            Encrypted: true
            VolumeSize: !Ref EC2VolumeSize
      UserData:
        'Fn::Base64': !Sub |
          #!/bin/bash -ex
          apt-get update -y
          apt-get install -y python
          apt-get install -y python-setuptools
          mkdir -p /opt/aws/bin
          wget https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
          python -m easy_install --script-dir /opt/aws/bin aws-cfn-bootstrap-latest.tar.gz
          exec > >(sudo tee /var/log/user-data.log) 2>&1
            sudo -u ubuntu bash -c "$(curl -fsSL https://raw.githubusercontent.com/kazhala/scripts/master/install/ubuntu_init.sh)"
          sudo /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource UbuntuEC2 --region ${AWS::Region}
          sudo echo ubuntu:${InstancePassword} | sudo chpasswd
          rm aws-cfn-bootstrap-latest.tar.gz

    CreationPolicy:
      ResourceSignal:
        Timeout: PT20M

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'ec2:StartInstances'
                  - 'ec2:StopInstances'
                Resource: '*'
          PolicyName: StartStopEC2

  LambdaStartEC2:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import boto3
          import os
          client = boto3.client("ec2")

          def lambda_handler(event, context):
            instance_list = os.getenv("INSTANCE_TO_START", "").split(",")
            client.start_instances(InstanceIds=instance_list)
      Handler: index.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.8
      Environment:
        Variables:
          INSTANCE_TO_START: !Ref UbuntuEC2

  LambdaStopEC2:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import boto3
          import os
          client = boto3.client("ec2")

          def lambda_handler(event, context):
            instance_list = os.getenv("INSTANCE_TO_STOP", "").split(",")
            client.stop_instances(InstanceIds=instance_list)
      Handler: index.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.8
      Environment:
        Variables:
          INSTANCE_TO_STOP: !Ref UbuntuEC2
